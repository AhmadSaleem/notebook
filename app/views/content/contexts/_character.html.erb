<%
  references = {
    characters: [],
    locations: [],
    items: [],
    creatures: [],
    races: [],
    religions: [],
    groups: [],
    magics: [],
    languages: []
  }
%>

<%# .joins(:item).where('items.privacy' => ['public']) also works, but doesn't include current_user check %>

<% locations = LocationLeadership.where(leader_id: content.id).map(&:location).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if locations.count == 1
    references[:locations] << [:leader_of, locations.first]
  elsif locations.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :location,
      content_list: locations,
      card_title: "Leader of #{pluralize(locations.count, 'location')}"
    } %>
  </div>
<% end %>

<% items = MakerRelationship.where(maker_id: content.id).map(&:item).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if items.count == 1
    references[:items] << [:maker_of, items.first]
  elsif items.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :item,
      content_list: items,
      card_title: "Made #{pluralize(items.count, 'item')}"
    } %>
  </div>
<% end %>

<% items = CurrentOwnership.where(current_owner_id: content.id).map(&:item).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if items.count == 1
    references[:items] << [:currently_owns, items.first]
  elsif items.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :item,
      content_list: items,
      card_title: "Currently owns #{pluralize(items.count, 'item')}"
    } %>
  </div>
<% end %>

<% items = PastOwnership.where(past_owner_id: content.id).map(&:item).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if items.count == 1
    references[:items] << [:previously_owned, items.first]
  elsif items.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :item,
      content_list: items,
      card_title: "Previously owned #{pluralize(items.count, 'item')}"
    } %>
  </div>
<% end %>

<% items = OriginalOwnership.where(original_owner_id: content.id).map(&:item).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if items.count == 1
    references[:items] << [:originally_owned, items.first]
  elsif items.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :item,
      content_list: items,
      card_title: "Originally owned #{pluralize(items.count, 'item')}"
    } %>
  </div>
<% end %>

<% races = FamousFigureship.where(famous_figure_id: content.id).map(&:race).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if races.count == 1
    references[:races] << [:famous_figure_of, races.first]
  elsif races.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :race,
      content_list: races,
      card_title: "Famous figure of #{pluralize(races.count, 'race')}"
    } %>
  </div>
<% end %>

<% religions = ReligiousFigureship.where(notable_figure_id: content.id).map(&:religion).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if religions.count == 1
    references[:religions] << [:famous_figure_of, religions.first]
  elsif religions.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :religion,
      content_list: religions,
      card_title: "Famous figure of #{pluralize(religions.count, 'religion')}"
    } %>
  </div>
<% end %>

<% religions = Deityship.where(deity_id: content.id).map(&:religion).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if religions.count == 1
    references[:religions] << [:deity_of, religions.first]
  elsif religions.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :religion,
      content_list: religions,
      card_title: "Deity of #{pluralize(religions.count, 'religion')}"
    } %>
  </div>
<% end %>

<% groups = GroupLeadership.where(leader_id: content.id).map(&:group).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if groups.count == 1
    references[:groups] << [:leader_of, groups.first]
  elsif groups.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :group,
      content_list: groups,
      card_title: "Leader of #{pluralize(groups.count, 'group')}"
    } %>
  </div>
<% end %>

<% groups = GroupMembership.where(member_id: content.id).map(&:group).select { |content| content.readable_by?(current_user || User.new) } %>
<%
  if groups.count == 1
    references[:groups] << [:member_of, groups.first]
  elsif groups.count > 1
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :group,
      content_list: groups,
      card_title: "Member of #{pluralize(groups.count, 'group')}"
    } %>
  </div>
<% end %>

<% scenes = SceneCharactership.where(scene_character_id: content.id).map(&:scene).select { |content| content.readable_by?(current_user || User.new) } %>
<% if scenes.any? %>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/in_universe_content_list', locals: {
      content_type: :scene,
      content_list: scenes,
      card_title: "In #{pluralize(scenes.count, 'scene')}"
    } %>
  </div>
<% end %>

<%
[:characters, :locations, :items, :creatures, :races, :religions, :groups, :magics, :languages].each do |content_type|
  if @references[content_type].count > 0
%>
  <div class="col s12 m6 l4">
    <%= render partial: 'content/cards/content_relation_list', locals: {
      content_type: content_type,
      relations:    @references[content_type],
      card_title:   "Related to #{pluralize(@references[content_type].count, content_type.to_s.singularize)}"
    } %>
  </div>
<%
  end
end
%>
