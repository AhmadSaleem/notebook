<% if question && question[:field] && !content.send(question[:field]).is_a?(ActiveRecord::Associations::CollectionProxy) %>
  <div class="content-question card-panel hoverable light-blue lighten-4">
    <i class="material-icons <%= content.class.color %>-text circle right"><%= content.class.icon %></i>
    <%= question[:question] %>

    <%= form_for content do |f| %>
      <%
        value = content.send(question[:field])
        if value.is_a?(ActiveRecord::Associations::CollectionProxy)
          klass = value.first.class || value.build.class
      %>
        <%# render 'content/form/relation_input', f: f, attribute: question[:field].chomp('ship').pluralize, relation: question[:field].chomp('ships').pluralize %>
      <%
        else
      %>
          <div class="input-field">
            <%= f.text_field question[:field], class: 'content-question-input' %>
            <%= f.label content.class.human_attribute_name(question[:field]) %>
          </div>
      <%
        end
      %>

      <%# Using a plain old form.submit creates a button that only responds to a click on the button text,
          not anywhere else on the button. %>
      <%= button_tag(type: 'submit', class: "content-question-submit waves-effect waves-light btn #{content.class.color} right") do %>
        Update <%= content.name.downcase %>
      <% end %>
      <div style="clear: both;"></div>
    <% end %>
  </div>
<% else %>
<!-- decided not to render serendipitous card for this question: <%= question || 'nil'%> -->
<% end %>
